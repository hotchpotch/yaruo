>|aa|
　　　　　　　　　　　／.:.:.　　　　　　　　 ＼
　 　 　 　 　 　 　 /:,:.:.:　 ／　　　ヽ　　　　＼
　　　　　　　　　 /.:.l:.:.:/:/　　　:/ 　',　:l　　 ヾ`ｰ
　 　 　 　 　 　 /!:.:.|:.: l/　 〃 /　j　}　:|　 　 ﾊ
　　　　　　　　/ｲ:.:.i|:.:.jL∠/_/ | /l.ﾑ_/|　l 　ｌ }　　git リポジトリの情報は全て .git ディレクトリに入っているから
　　　　　　　　　N:.ﾊ:.:.:lｨfｱﾄ/　ﾚ　ｨ=ﾄ | /| ∧j　　 　　 プロジェクトのディレクトリだけで完結している
　　　　　　　　　　ヽﾑ:.} ii;_j　　　　ii;ﾘ ﾙ iﾚヽ.　　　
　 　 　 　 　 　 　 　 `ﾍ:ゝ　　　_ 　 　 小/　　　　　例えば CVS とは違って…リポジトリとワーキングツリーは同じもの
　 　 　 　 　 　 　 　 　 ヾ:{＞､ _　ｨ＜}/|/　　　　　
　　　　　　　　　　 _, ｨr'´ヽ｛ __＿`}　ヽ､_　　　
　　　　　　　　　／| l:|　　　| =＝=|　　 |:lﾞヽ　　　
　　　　　 　 　 /　 | l:ｌ　　　l 　 　 l　　 l::ｌ　l
　　 　 　 　 　 l　　ヽﾊ　 　 l　 　 l　　//　 |


　 　 　　　＿＿＿_
　 　　　／⌒　　⌒＼
　　　／（ ＞） 　（＜）＼　　
　 ／::::::⌒（__人__）⌒::::: ＼ 　CVS なんて石器時代だお！
　 |　　　　/| | | | |　　　　　|　 
　 ＼　 (、`ー―'´,　　 　／
　　　　　 ￣￣￣ 　


　　 　 ,　'´￣￣｀ ｰ-､　　　　　
　　 ／　　 〃" ｀ヽ､　＼　　　　
　 /　/　 ﾊ/　　　　 ＼ﾊﾍ　　　実は .git ディレクトリ以外の場所に情報を格納することもできるんだけど
　 |i │ ｌ |ﾘノ　　　 ｀ヽ}_}ハ.　　そんなことは今考えるべきことじゃないねっ！
　 |i　|　从 ● 　 　 ●ｌ小N　　　
　 |i （|　⊂⊃ ､_,､_,　⊂lｉ|ノ　　 　
　 | i⌒ヽ j　　（_.ノ 　　ﾉi|__／⌒)　
　 | ヽ 　ヽx＞､ __,　イｌ　|::::ヽ／.　 
　 |　∧__,ﾍ}::ﾍ三|:::::/ｌ|　|',:::::ﾊ　　
　 |　ヾ_:::ッﾘ :::∨:／　|　| >'''´


　 　　　＿＿＿_　　
　　　／　　 　 　＼
　 ／　　─　 　 ─＼　
／ 　　 （●） 　（●） ＼　つまりプロジェクトのディレクトリを消したら
|　 　　 　 （__人__）　 　 |　　本当に全て無くなってしまうということかお…ちょっと怖いお
/　　　　 ∩ノ ⊃　　／
(　 ＼　／ ＿ノ　|　 |
.＼　“　　／＿＿|　 | 　
　　＼ ／＿＿＿ ／ 　 
||<
>||
$ rm -rf git-tutorial
||<
>|aa|
　　 　 ,　'´￣￣｀ ｰ-､　　　　　
　　 ／　　 〃" ｀ヽ､　＼　　　　
　 /　/　 ﾊ/　　　　 ＼ﾊﾍ　　　プロジェクトのコピーもディレクトリのコピーだけでできるんだよっ
　 |i │ ｌ |ﾘノ　　　 ｀ヽ}_}ハ.　　
　 |i　|　从 ● 　 　 ●ｌ小N　　　
　 |i （|　⊂⊃ ､_,､_,　⊂lｉ|ノ　　 　
　 | i⌒ヽ j　　（_.ノ 　　ﾉi|__／⌒)　
　 | ヽ 　ヽx＞､ __,　イｌ　|::::ヽ／.　 
　 |　∧__,ﾍ}::ﾍ三|:::::/ｌ|　|',:::::ﾊ　　
　 |　ヾ_:::ッﾘ :::∨:／　|　| >'''´
||<
>||
$ cp -a git-tutorial new-git-tutorial. 
||<
>|aa|
　　　　　　　　　　　／.:.:.　　　　　　　　 ＼
　 　 　 　 　 　 　 /:,:.:.:　 ／　　　ヽ　　　　＼
　　　　　　　　　 /.:.l:.:.:/:/　　　:/ 　',　:l　　 ヾ`ｰ
　 　 　 　 　 　 /!:.:.|:.: l/　 〃 /　j　}　:|　 　 ﾊ
　　　　　　　　/ｲ:.:.i|:.:.jL∠/_/ | /l.ﾑ_/|　l 　ｌ }　　インデックスにはファイルの stat 情報も含まれているから
　　　　　　　　　N:.ﾊ:.:.:lｨfｱﾄ/　ﾚ　ｨ=ﾄ | /| ∧j　　 　　 プロジェクトを移動・コピーしたときは
　　　　　　　　　　ヽﾑ:.} ii;_j　　　　ii;ﾘ ﾙ iﾚヽ.　　　インデックスを更新する必要がある
　 　 　 　 　 　 　 　 `ﾍ:ゝ　　　_ 　 　 小/　　　　　
　 　 　 　 　 　 　 　 　 ヾ:{＞､ _　ｨ＜}/|/　　　　　
　　　　　　　　　　 _, ｨr'´ヽ｛ __＿`}　ヽ､_　　　
　　　　　　　　　／| l:|　　　| =＝=|　　 |:lﾞヽ　　　
　　　　　 　 　 /　 | l:ｌ　　　l 　 　 l　　 l::ｌ　l
　　 　 　 　 　 l　　ヽﾊ　 　 l　 　 l　　//　 |



　　 　　 ＿__　　　　━┓
　　　 ／　―＼ 　　┏┛
　　／ノ　　(●)＼　 ・
.　｜　(●) 　 ⌒）＼　パーミッションとかのことかお？
.　｜　　 （__ノ￣　　|　とりあえず言われた通りにやっとくお
　　＼　　　　　　　 /
　　　 ＼　　　　 _ノ
　　　　/´　　 　 ｀＼
　　 　 |　　　　　　　|
　　 　 |　　　　　　　|
||<
>||
$ git update-index --refresh
||<
>|aa|
　　 　 ,　'´￣￣｀ ｰ-､　　　　　
　　 ／　　 〃" ｀ヽ､　＼　　　　
　 /　/　 ﾊ/　　　　 ＼ﾊﾍ　　　プロジェクトのコピーは別々のマシン間でも同じようにできるんだよっ
　 |i │ ｌ |ﾘノ　　　 ｀ヽ}_}ハ.　　その場合、インデックスがどうなってるか分からないから
　 |i　|　从 ● 　 　 ●ｌ小N　　　一度リセットするのがオススメにょろ
　 |i （|　⊂⊃ ､_,､_,　⊂lｉ|ノ　　 　
　 | i⌒ヽ j　　（_.ノ 　　ﾉi|__／⌒)　
　 | ヽ 　ヽx＞､ __,　イｌ　|::::ヽ／.　 
　 |　∧__,ﾍ}::ﾍ三|:::::/ｌ|　|',:::::ﾊ　　
　 |　ヾ_:::ッﾘ :::∨:／　|　| >'''´
||<
>||
$ git read-tree --reset HEAD
$ git update-index --refresh
||<
>|aa|
　　　　　　　　　　　／.:.:.　　　　　　　　 ＼
　 　 　 　 　 　 　 /:,:.:.:　 ／　　　ヽ　　　　＼
　　　　　　　　　 /.:.l:.:.:/:/　　　:/ 　',　:l　　 ヾ`ｰ
　 　 　 　 　 　 /!:.:.|:.: l/　 〃 /　j　}　:|　 　 ﾊ
　　　　　　　　/ｲ:.:.i|:.:.jL∠/_/ | /l.ﾑ_/|　l 　ｌ }　　これでインデックスの内容が HEAD と同じになる
　　　　　　　　　N:.ﾊ:.:.:lｨfｱﾄ/　ﾚ　ｨ=ﾄ | /| ∧j　　 　　 ちなみにこれは git-reset で代用できる
　　　　　　　　　　ヽﾑ:.} ii;_j　　　　ii;ﾘ ﾙ iﾚヽ.　　　
　 　 　 　 　 　 　 　 `ﾍ:ゝ　　　_ 　 　 小/　　　　　
　 　 　 　 　 　 　 　 　 ヾ:{＞､ _　ｨ＜}/|/　　　　　
　　　　　　　　　　 _, ｨr'´ヽ｛ __＿`}　ヽ､_　　　
　　　　　　　　　／| l:|　　　| =＝=|　　 |:lﾞヽ　　　
　　　　　 　 　 /　 | l:ｌ　　　l 　 　 l　　 l::ｌ　l
　　 　 　 　 　 l　　ヽﾊ　 　 l　 　 l　　//　 |
||<
>||
$ git reset
||<
>|aa|
　 　 　　　＿＿＿_
　 　　　／⌒　　⌒＼ ﾎｼﾞﾎｼﾞ
　　　／（ ●） 　（●）＼
　 ／::::::⌒（__人__）⌒::::: ＼ 　簡単なほうのコマンドだけ教えてくれれば十分だお
　 |　　　 ｍj |ー'´　　　　　 |
　 ＼　 〈＿_ﾉ　　　　　 　／
　　　　ノ　　ﾉ
||<
>|aa|
　　　　　　　　　　　／.:.:.　　　　　　　　 ＼
　 　 　 　 　 　 　 /:,:.:.:　 ／　　　ヽ　　　　＼
　　　　　　　　　 /.:.l:.:.:/:/　　　:/ 　',　:l　　 ヾ`ｰ
　 　 　 　 　 　 /!:.:.|:.: l/　 〃 /　j　}　:|　 　 ﾊ
　　　　　　　　/ｲ:.:.i|:.:.jL∠/_/ | /l.ﾑ_/|　l 　ｌ }　　…公開されている git リポジトリのほとんどが
　　　　　　　　　N:.ﾊ:.:.:lｨfｱﾄ/　ﾚ　ｨ=ﾄ | /| ∧j　　 　　 実際のファイルではなく .git ディレクトリを公開している
　　　　　　　　　　ヽﾑ:.} ii;_j　　　　ii;ﾘ ﾙ iﾚヽ.　　　そういうリポジトリをコピーするにはこうすればいい
　 　 　 　 　 　 　 　 `ﾍ:ゝ　　　_ 　 　 小/　　　　　
　 　 　 　 　 　 　 　 　 ヾ:{＞､ _　ｨ＜}/|/　　　　　
　　　　　　　　　　 _, ｨr'´ヽ｛ __＿`}　ヽ､_　　　
　　　　　　　　　／| l:|　　　| =＝=|　　 |:lﾞヽ　　　
　　　　　 　 　 /　 | l:ｌ　　　l 　 　 l　　 l::ｌ　l
　　 　 　 　 　 l　　ヽﾊ　 　 l　 　 l　　//　 |
||<
>||
$ mkdir my-git
$ cd my-git
$ rsync -rL rsync://rsync.kernel.org/pub/scm/git/git.git/ .git
$ git read-tree HEAD
||<
>|aa|
　 　　　／⌒　　⌒＼
　　　／（ ●） 　（●）＼　　とりあえず .git ディレクトリを作って
　 ／::::::⌒（__人__）⌒::::: ＼　インデックスを HEAD と同期してるんだお！
　 |　　　　　|r┬-|　　　　　|　
　 ＼ 　　 　 `ー'´ 　 　 ／
||<
>||
$ git checkout-index -u -a
||<
>|aa|
　　 　 ,　'´￣￣｀ ｰ-､　　　　　
　　 ／　　 〃" ｀ヽ､　＼　　　　上のコマンドでワーキングツリーにファイルをチェックアウトできるよ！
　 /　/　 ﾊ/　　　　 ＼ﾊﾍ　　　-u はあとから git update-index --refresh しなくていいようにインデックスを最新に保つ
　 |i │ ｌ |ﾘノ　　　 ｀ヽ}_}ハ.　　-a は全部のファイルをチェックアウトするオプションなのさっ
　 |i　|　从 ● 　 　 ●ｌ小N　　　
　 |i （|　⊂⊃ ､_,､_,　⊂lｉ|ノ　　 　
　 | i⌒ヽ j　　（_.ノ 　　ﾉi|__／⌒)　
　 | ヽ 　ヽx＞､ __,　イｌ　|::::ヽ／.　 
　 |　∧__,ﾍ}::ﾍ三|:::::/ｌ|　|',:::::ﾊ　　
　 |　ヾ_:::ッﾘ :::∨:／　|　| >'''´


　 　　　＿＿＿_
　　　／　　 　 　＼ （ ;;;;(
　 ／　　＿ノ　 ヽ__＼) ;;;;)
／ 　　 （─） 　（─ /;;／
|　 　　 　 （__人__） l;;,´　これだけまわりくどいという事は
/　　　 　 ∩ ノ)━・'／　　　　必ずもっと簡単なコマンドがあるはずだお…
(　 ＼　／ ＿ノ´.|　 |
.＼　 " 　／＿＿|　 |
　　＼ ／＿＿＿ ／


　　　　　　　　　　　／.:.:.　　　　　　　　 ＼
　 　 　 　 　 　 　 /:,:.:.:　 ／　　　ヽ　　　　＼
　　　　　　　　　 /.:.l:.:.:/:/　　　:/ 　',　:l　　 ヾ`ｰ
　 　 　 　 　 　 /!:.:.|:.: l/　 〃 /　j　}　:|　 　 ﾊ
　　　　　　　　/ｲ:.:.i|:.:.jL∠/_/ | /l.ﾑ_/|　l 　ｌ }　　…ある…
　　　　　　　　　N:.ﾊ:.:.:lｨfｱﾄ/　ﾚ　ｨ=ﾄ | /| ∧j　　 　　 
　　　　　　　　　　ヽﾑ:.} ii;_j　　　　ii;ﾘ ﾙ iﾚヽ.　　　
　 　 　 　 　 　 　 　 `ﾍ:ゝ　　　_ 　 　 小/　　　　　
　 　 　 　 　 　 　 　 　 ヾ:{＞､ _　ｨ＜}/|/　　　　　
　　　　　　　　　　 _, ｨr'´ヽ｛ __＿`}　ヽ､_　　　
　　　　　　　　　／| l:|　　　| =＝=|　　 |:lﾞヽ　　　
　　　　　 　 　 /　 | l:ｌ　　　l 　 　 l　　 l::ｌ　l
　　 　 　 　 　 l　　ヽﾊ　 　 l　 　 l　　//　 |
||<
>||
$ git clone rsync://rsync.kernel.org/pub/scm/git/git.git/ my-git
$ cd my-git
$ git checkout
||<
>|aa|
　　　　　　　　　＿＿＿
　　　　　　　／ ⌒　　⌒＼
　　　　　 ／　（⌒）　 （⌒） ＼　　　
　　　　／ 　 ///（__人__）/// ＼　　
　　 　 |　　 u. 　 `Y⌒y'´　　　 |　　さすが git だお！
　 　 　 ＼ 　 　 　 ﾞー ′　　,／ 　　うちに来て妹をファックしていいお！
　　　 　 /⌒ヽ　 　ー‐ 　 　ｨヽ　　　
　 　 　 / rｰ'ゝ　　　　　　　〆ヽ 　　
　　　　/,ﾉヾ　,>　　　　　　ヾ_ノ,|
　　　　|　ヽ〆　　　　　　　　|´　|



　　 　 ,　'´￣￣｀ ｰ-､　　　　　
　　 ／　　 〃" ｀ヽ､　＼　　　　ちなみにさっき私が clone しようとしたら失敗したにょろ
　 /　/　 ﾊ/　　　　 ＼ﾊﾍ　　　そういう場合は git clone git://github.com/hotchpotch/yaruo.git でもしてればいいのさっ
　 |i │ ｌ |ﾘノ　　　 ｀ヽ}_}ハ.　　
　 |i　|　从 ● 　 　 ●ｌ小N　　　次はやっとブランチの作成だよ！
　 |i （|　⊂⊃ ､_,､_,　⊂lｉ|ノ　　 　
　 | i⌒ヽ j　　（_.ノ 　　ﾉi|__／⌒)　
　 | ヽ 　ヽx＞､ __,　イｌ　|::::ヽ／.　 
　 |　∧__,ﾍ}::ﾍ三|:::::/ｌ|　|',:::::ﾊ　　
　 |　ヾ_:::ッﾘ :::∨:／　|　| >'''´
||<

[[やる夫で学ぶ gitcore-tutorial/Creating a new branch]]
